.my-custom-button {
  padding: 10px 20px;
  font-size: 16px;
  font-weight: 600;
  border-radius: 8px;
  border: 2px solid transparent; /* default border for non-outline */
  cursor: pointer;
  transition: all 0.3s ease;
  background-color: transparent; /* outline variant has transparent background */
  color: var(--ion-color-primary); /* Color for the text */
  text-transform: uppercase;
  width: 100%;
}

.my-custom-button.outline {
  background-color: transparent;
  border-color: var(--ion-color-primary); /* Color of the outline */
  color: var(--ion-color-primary); /* Color of the text */
}

.my-custom-button.outline:hover {
  background-color: var(--ion-color-primary); /* On hover, background changes */
  color: white; /* Text color changes on hover */
}

.my-custom-button.outline:active {
  background-color: var(--ion-color-primary-shade); /* When clicked, background darkens */
  color: white;
  border-color: var(--ion-color-primary-shade);
}

.my-custom-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
.nfc-tag-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.95);
  display: flex;
  align-items: flex-start; 
  justify-content: center;
  z-index: 999;
  animation: slideDown 0.5s ease forwards; 
  padding-top: 2rem; 
}

.nfc-tag {
  width: 200px;
  height: 200px;
  background: linear-gradient(145deg, #1e3a8a, #3b82f6); 
  border-radius: 50%; /* Make it round */
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  border: 4px solid rgba(255, 255, 255, 0.1);
}

.nfc-tag-content {
  text-align: center;
  z-index: 2;
}

.pulse-icon {
  animation: pulse 2s infinite;
  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.5));
}

@keyframes pulse {
  0% { transform: scale(1); opacity: 0.8; }
  50% { transform: scale(1.15); opacity: 1; }
  100% { transform: scale(1); opacity: 0.8; }
}

.scan-beam {
  position: absolute;
  top: -100%;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 100%
  );
  animation: beam 2s infinite;
}

@keyframes beam {
  0% { top: -100%; }
  100% { top: 100%; }
}

@keyframes slideDown {
  from { transform: translateY(-100%); } /* Slide from top */
  to { transform: translateY(0); } /* Slide to original position */
}